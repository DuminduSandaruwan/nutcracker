<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
	<title>Nutcracker: RGB Effects Builder</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta http-equiv="last-modified" content=" 24 Feb 2012 09:57:45 GMT"/>
		<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE8"/>
		<meta name="robots" content="index,follow"/>
		<meta name="googlebot" content="noarchive"/>
		<link rel="shortcut icon" href="barberpole.ico" type="image/x-icon"/> 
		<meta name="description" content="RGB Sequence builder for Vixen, Light-O-Rama and Light Show Pro"/>
		<meta name="keywords" content="DIY Light animation, Christmas lights, RGB Sequence builder, Vixen, Light-O-Rama or Light Show Pro"/>
<link href="css/loginmodule.css" rel="stylesheet" type="text/css" />
</head>
<body>
<h1>Nutcracker Update </h1>

<?php
list($usec, $sec) = explode(' ', microtime());
$script_start = (float) $sec + (float) $usec;

if($_SERVER['HTTP_HOST'] !='localhost')
{
	echo"<pre><h1>ERROR! You cannot run this script on any place except for your local computer<br/>";
	echo "Please RIGHT-CLICK the filename, not left click it. select save as and put<br/>";
	echo "install.php into your c:\wamp\www directory.";
	echo "\nOnce you have downloaded install.php you run it by opening a web page to 'localhost/install.php'\n";
	
	echo "<pre>Here are the values in your _SERVER array\n";
	print_r($_SERVER);
	echo "</pre>";
	die ("\n\nProgram exiting .. ");
}

define('CR', "\r");          // carriage return; Mac
define('LF', "\n");          // line feed; Unix
define('CRLF', "\r\n");      // carriage return and line feed; Windows
define('BR', '<br />' . LF); // HTML Break

set_time_limit(300);	// give us 5 minutes to finish.

//	ftp login info
$host = 'meighan.net';
$usr = 'nutcracker';
$pwd = 'xfer1011';

// connect to FTP server (port 21)
$conn_id = ftp_connect($host, 21) or die ("Cannot connect to host");

ob_flush();
// send access parameters
ftp_login($conn_id, $usr, $pwd) or die("Cannot login");

ob_flush();
/*     sample manifest file:


nutcracker_sean                  index.html                       c2a0342a7c2dccb04bdcd543d3802610 11590
nutcracker_sean/css              loginmodule.css                  50288fa14a081329ecccf4de5aa59b52 934
nutcracker_sean/effects          arrow.gif                        5034704a76cd55c1cbcbc58ea6bf523f 66
nutcracker_sean/effects          auth.php                         ec02b95cfa4f58743d1e8fdc1f49b444 268
nutcracker_sean/effects          barberpole.ico                   314c16a7b41aa60be6733d46d9132749 318
nutcracker_sean/effects          butterfly.php                    81827c6395e65aa688b4d7eafd5005f4 9286
 */

//	first lets get a current copy of the manifest from meighan.net
//
echo "<pre>";
//
$local_file = "manifest";
$server_file =   "nutcracker_sean/manifest";
echo "Getting a copy of the current manifest from meighan.net\n";
if (ftp_get($conn_id, $local_file, $server_file, FTP_BINARY)) {
	printf( "%-64s [downloaded]\n",$local_file);
} else {
	echo "There was a problem with ftp_get(conn_id, $local_file, $server_file, FTP_BINARY)\n";
}




echo "Getting a copy of seqbuilder1.sql: This creates all the table structures\n";
$local_file = "seqbuilder1.sql";
$server_file =   "nutcracker_sean/seqbuilder1.sql";

if (ftp_get($conn_id, $local_file, $server_file, FTP_BINARY)) {
	printf( "%-64s [downloaded]\n",$local_file);
} else {
	echo "There was a problem with ftp_get(conn_id, $local_file, $server_file, FTP_BINARY)\n";
}

echo "Getting a copy of seqbuilder2.sql: This inserts users, models, targets and effects from meighan.net\n";
$local_file = "seqbuilder2.sql";
$server_file =   "nutcracker_sean/seqbuilder2.sql";

if (ftp_get($conn_id, $local_file, $server_file, FTP_BINARY)) {
	printf( "%-64s [downloaded]\n",$local_file);
} else {
	echo "There was a problem with ftp_get(conn_id, $local_file, $server_file, FTP_BINARY)\n";
}



echo "<pre>";
$fh=fopen("manifest","r") or die ("Unable to open manifest");
while (!feof($fh)) 
{
	$line = fgets($fh);
	$line = str_replace(CRLF, LF, $line);
	$line = str_replace(CR, LF, $line);
	ob_flush();
	flush();
	$tok=preg_split("/ +/", $line);
	//$tok=explode(" ", $line);
	//
	/*

Array
(
    [0] => \nutcracker\effects
    [1] => text.php

)
	 */
	$c=count($tok);
	if($c==4)
	{
		$local_dir=$tok[0];
		$tok2=explode("/",$local_dir);
		$root_dir=$tok2[0];
		$filename = $tok[1];
		$md5 = $tok[2];
		$filesize = $tok[3];

		if (file_exists($local_dir)) {
			//		echo "The directory $local_dir exists\n";
		} else {
			echo "The directory $local_dir does not exist, creating it ..\n";
			mkdir($local_dir);
		}

		ob_flush();

		if(empty($stats[$local_dir]))
			$stats[$local_dir]=0;
		$stats[$local_dir]++;
		$local_file= $local_dir . "/" . $filename;
		$local_file = str_replace(LF, "", $local_file);

		$server_file =   $local_dir . "/" . $filename;
		$server_file = str_replace(LF, "", $server_file);

		//$local_file=str_replace('/','\\',	$local_file);
		//echo " trying ftp_get(conn_id, [$local_file], [$server_file]\n";
		// perform file download
		$md5_local="??"; $fsize=0;
		if(file_exists($local_file) )
		{
			$md5_local=md5_file($local_file);
			$fsize=filesize($local_file);
		}
		if($md5==$md5_local)
			printf( "%-64s %s [ok]\n",$local_file,$md5);
		else
			if (ftp_get($conn_id, $local_file, $server_file, FTP_BINARY)) {
				if($fsize==0)
					printf( "%-64s %s [New file]\n",$local_file,$md5);
				else
					printf( "%-64s %s [updated. Old size %7d, new size %7d]\n",$local_file,$md5,$fsize,$filesize);
			} else {
				echo "There was a problem with ftp_get(conn_id, $local_file, $server_file, FTP_BINARY)\n";
			}
		ob_flush();
		flush();
	}
}




// close the connection
ftp_close($conn_id);

echo "<h1>Now we will install and update the mySql database</h1>\n";

$DB_HOST='localhost';
$DB_USER='nc_user';
$DB_PASSWORD='nutcracker123';
$DB_DATABASE='nutcracker';

echo "root_dir=$root_dir\n";

write_config("nutcracker_sean",$DB_HOST,$DB_USER,$DB_PASSWORD,$DB_DATABASE);



list($usec, $sec) = explode(' ', microtime());
$script_end = (float) $sec + (float) $usec;
$elapsed_time = round($script_end - $script_start, 5); // to 5 decimal places

printf ("<pre>Elapsed time for bringing down files = %10.5f seconds</pre>\n",$elapsed_time);


$dbhost = 'localhost';
$dbuser = 'root';
$dbpass = '';
$conn = mysql_connect($dbhost, $dbuser, $dbpass);
if(! $conn )
{
	die('Could not connect: ' . mysql_error());
}
echo 'Connected successfully<br />';

$sql = "CREATE DATABASE IF NOT EXISTS $DB_DATABASE";
echo "<pre>$sql</pre>\n";
$retval = mysql_query( $sql, $conn );

if(! $retval )
{
	die('Could not add database: ' . mysql_error());
}
echo "Database $DB_DATABASE added successfully\n";

$sql="DELETE FROM user where user='$DB_USER'";
echo "<pre>$sql</pre>\n";
$retval = mysql_query( $sql, $conn );

$sql="GRANT ALL ON *.* TO '$DB_USER'@$DB_HOST IDENTIFIED BY '$DB_PASSWORD'";
echo "<pre>$sql</pre>\n";
$retval = mysql_query( $sql, $conn );
if(! $retval )
{
	die('Could not create user nutcracker: ' . mysql_error());
}
echo "user $DB_USER added successfully\n";




$db = mysql_select_db("$DB_DATABASE");

execute_sql("seqbuilder1.sql");
execute_sql("seqbuilder2.sql");


list($usec, $sec) = explode(' ', microtime());
$script_end = (float) $sec + (float) $usec;
$elapsed_time = round($script_end - $script_start, 5); // to 5 decimal places

printf ("Elapsed time for database operations = %10.5f seconds\n",$elapsed_time);

echo "<br/><br/>Nutcracker software installed.\n";
function write_config($root,$DB_HOST,$DB_USER,$DB_PASSWORD,$DB_DATABASE)
{
	$file = $root . "/conf/config.php";

	$fh=fopen($file,"w") or die("Unable to open $file for write\n");

	fwrite($fh,sprintf("<?php\n"));
	fwrite($fh,sprintf("define('DB_HOST',     '%s');\n",$DB_HOST));
	fwrite($fh,sprintf("define('DB_USER',     '%s');\n",$DB_USER));
	fwrite($fh,sprintf("define('DB_PASSWORD', '%s');\n",$DB_PASSWORD));
	fwrite($fh,sprintf("define('DB_DATABASE', '%s');\n",$DB_DATABASE));
	fclose($fh);
}


function drop_and_create($conn,$table,$sql)
{
	$drop_sql = "drop table if exists " . $table;
	//mysql_sql($drop_sql,$db) or die("Error on '$drop_sql'");
	$retval = mysql_query( $drop_sql, $conn );
	if(! $retval )
	{
		die("Could not drop database: $drop_sql" . mysql_error());
	}
	echo "$drop_sql was successful\n";

	$retval = mysql_query( $sql, $conn );
	if(! $retval )
	{
		die("Could not add database: $sql " . mysql_error());
	}
	echo "create table $table was successful\n";
}

function execute_sql($sqlFileToExecute)
{
	/*
	$hostname = 'db.hostname.net';
	$db_user = 'dbuser';
	$db_password = 'dbpassword';
	$link = mysql_connect($hostname, $db_user, $db_password);
	if (!$link) {
		die ("MySQL Connection error");
	}

	$database_name = 'databasename';
	mysql_select_db($database_name, $link) or die ("Wrong MySQL Database");
	 */

	$sqlErrorCode = 0;
	// read the sql file
	$f = fopen($sqlFileToExecute,"r+");
	$sqlFile = fread($f, filesize($sqlFileToExecute));
	$sqlArray = explode(';',$sqlFile);
	foreach ($sqlArray as $stmt) {
		if (strlen($stmt)>3 && substr(ltrim($stmt),0,2)!='/*') {
			echo "<pre>  " . substr($stmt,0,80) . "</pre>\n";
			$stmt2=str_replace(";","_",$stmt);
			$newstmt=str_replace(")_",");",$stmt2);
			$result = mysql_query($newstmt);
			if (!$result) {
				$sqlErrorCode = mysql_errno();
				$sqlErrorText = mysql_error();
				$sqlStmt = $newstmt;
				break;
			}
		}
	}
	if ($sqlErrorCode == 0) {
		echo "Script is executed succesfully!";
	} else {
		echo "An error occured during installation!<br/>";
		echo "Error code: $sqlErrorCode<br/>";
		echo "Error text: $sqlErrorText<br/>";
		echo "Statement:<br/> $sqlStmt<br/>";
	}

}	

